/*
 * EngadirLinhaInformeView.java
 */

package engadirlinhainforme;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

import java.awt.Color;
import java.awt.event.WindowListener;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import java.sql.*;

/**
 * The application's main frame.
 */
public class EngadirLinhaInformeView extends FrameView  {

    public EngadirLinhaInformeView(SingleFrameApplication app) {
        super(app);

        WindowListener wl = new WindowListener(){
            public void windowOpened(WindowEvent e) {
                readDBAndReloadCombos();
            }
            public void windowClosing(WindowEvent e) {}
            public void windowClosed(WindowEvent e) {}
            public void windowIconified(WindowEvent e) {}
            public void windowDeiconified(WindowEvent e) {}
            public void windowActivated(WindowEvent e) {}
            public void windowDeactivated(WindowEvent e) {}
        };
        super.getFrame().addWindowListener(wl);
        
        initComponents();
        mysql_i.estableceConexion();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });

    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = EngadirLinhaInformeApp.getApplication().getMainFrame();
            aboutBox = new EngadirLinhaInformeAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        EngadirLinhaInformeApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        dataLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelComproConductor = new javax.swing.JLabel();
        jLabelComproMatricula = new javax.swing.JLabel();
        labelComprCond = new javax.swing.JLabel();
        labelComproMatr = new javax.swing.JLabel();
        jLabelComproRestoDatos = new javax.swing.JLabel();
        labelComproResto = new javax.swing.JLabel();
        jLabelComprofData = new javax.swing.JLabel();
        labelComprfData = new javax.swing.JLabel();
        debugField = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        labelComproKmsHoras = new javax.swing.JLabel();
        MatriculaLabel = new javax.swing.JLabel();
        jComboBoxMatricula = new javax.swing.JComboBox();
        kmSaidaLabel = new javax.swing.JLabel();
        kmSaidaField = new javax.swing.JTextField();
        kmChegadaLabel = new javax.swing.JLabel();
        kmChegadaField = new javax.swing.JTextField();
        horaSaidaLabel = new javax.swing.JLabel();
        horaSaidaField = new javax.swing.JTextField();
        horaChegadaLabel = new javax.swing.JLabel();
        horaChegadaField = new javax.swing.JTextField();
        gastosReparaLabel = new javax.swing.JLabel();
        gastosReparaField = new javax.swing.JTextField();
        combustibleLitrosLabel = new javax.swing.JLabel();
        combustibleLitrosField = new javax.swing.JTextField();
        gastoEurLabel = new javax.swing.JLabel();
        gastoCombusField = new javax.swing.JTextField();
        idConductorLabel = new javax.swing.JLabel();
        jComboBoxConductor = new javax.swing.JComboBox();
        jButtonClose = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jCalendarFecha = new com.toedter.calendar.JCalendar();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(engadirlinhainforme.EngadirLinhaInformeApp.class).getContext().getResourceMap(EngadirLinhaInformeView.class);
        dataLabel.setText(resourceMap.getString("dataLabel.text")); // NOI18N
        dataLabel.setName("dataLabel"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jLabelComproConductor.setText(resourceMap.getString("jLabelComproConductor.text")); // NOI18N
        jLabelComproConductor.setName("jLabelComproConductor"); // NOI18N

        jLabelComproMatricula.setText(resourceMap.getString("jLabelComproMatricula.text")); // NOI18N
        jLabelComproMatricula.setName("jLabelComproMatricula"); // NOI18N

        labelComprCond.setText(resourceMap.getString("labelComprCond.text")); // NOI18N
        labelComprCond.setName("labelComprCond"); // NOI18N

        labelComproMatr.setText(resourceMap.getString("labelComproMatr.text")); // NOI18N
        labelComproMatr.setName("labelComproMatr"); // NOI18N

        jLabelComproRestoDatos.setText(resourceMap.getString("jLabelComproRestoDatos.text")); // NOI18N
        jLabelComproRestoDatos.setName("jLabelComproRestoDatos"); // NOI18N

        labelComproResto.setText(resourceMap.getString("labelComproResto.text")); // NOI18N
        labelComproResto.setName("labelComproResto"); // NOI18N

        jLabelComprofData.setText(resourceMap.getString("jLabelComprofData.text")); // NOI18N
        jLabelComprofData.setName("jLabelComprofData"); // NOI18N

        labelComprfData.setText(resourceMap.getString("labelComprfData.text")); // NOI18N
        labelComprfData.setName("labelComprfData"); // NOI18N

        debugField.setName("debugField"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        labelComproKmsHoras.setText(resourceMap.getString("labelComproKmsHoras.text")); // NOI18N
        labelComproKmsHoras.setName("labelComproKmsHoras"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(debugField, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelComproConductor)
                            .addComponent(jLabelComproMatricula)
                            .addComponent(jLabelComprofData)
                            .addComponent(jLabel1)
                            .addComponent(jLabelComproRestoDatos))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(labelComprfData, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelComproMatr, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelComprCond, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                            .addComponent(labelComproResto, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                            .addComponent(labelComproKmsHoras, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelComprCond)
                    .addComponent(jLabelComproConductor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelComproMatricula)
                    .addComponent(labelComproMatr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelComprofData)
                    .addComponent(labelComprfData))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelComproKmsHoras, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelComproRestoDatos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelComproResto, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(42, 42, 42)
                .addComponent(debugField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        MatriculaLabel.setText(resourceMap.getString("MatriculaLabel.text")); // NOI18N
        MatriculaLabel.setName("MatriculaLabel"); // NOI18N

        jComboBoxMatricula.setName("jComboBoxMatricula"); // NOI18N
        jComboBoxMatricula.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMatriculaItemStateChanged(evt);
            }
        });

        kmSaidaLabel.setText(resourceMap.getString("kmSaidaLabel.text")); // NOI18N
        kmSaidaLabel.setName("kmSaidaLabel"); // NOI18N

        kmSaidaField.setName("kmSaidaField"); // NOI18N
        kmSaidaField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                kmSaidaFieldFocusLost(evt);
            }
        });

        kmChegadaLabel.setText(resourceMap.getString("kmChegadaLabel.text")); // NOI18N
        kmChegadaLabel.setName("kmChegadaLabel"); // NOI18N

        kmChegadaField.setName("kmChegadaField"); // NOI18N
        kmChegadaField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                kmChegadaFieldFocusLost(evt);
            }
        });

        horaSaidaLabel.setText(resourceMap.getString("horaSaidaLabel.text")); // NOI18N
        horaSaidaLabel.setName("horaSaidaLabel"); // NOI18N

        horaSaidaField.setName("horaSaidaField"); // NOI18N
        horaSaidaField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                horaSaidaFieldFocusLost(evt);
            }
        });

        horaChegadaLabel.setText(resourceMap.getString("horaChegadaLabel.text")); // NOI18N
        horaChegadaLabel.setName("horaChegadaLabel"); // NOI18N

        horaChegadaField.setName("horaChegadaField"); // NOI18N
        horaChegadaField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                horaChegadaFieldFocusLost(evt);
            }
        });

        gastosReparaLabel.setText(resourceMap.getString("gastosReparaLabel.text")); // NOI18N
        gastosReparaLabel.setName("gastosReparaLabel"); // NOI18N

        gastosReparaField.setText(resourceMap.getString("gastosReparaField.text")); // NOI18N
        gastosReparaField.setName("gastosReparaField"); // NOI18N
        gastosReparaField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gastosReparaFieldFocusLost(evt);
            }
        });

        combustibleLitrosLabel.setText(resourceMap.getString("combustibleLitrosLabel.text")); // NOI18N
        combustibleLitrosLabel.setName("combustibleLitrosLabel"); // NOI18N

        combustibleLitrosField.setText(resourceMap.getString("combustibleLitrosField.text")); // NOI18N
        combustibleLitrosField.setName("combustibleLitrosField"); // NOI18N
        combustibleLitrosField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                combustibleLitrosFieldFocusLost(evt);
            }
        });

        gastoEurLabel.setText(resourceMap.getString("gastoEurLabel.text")); // NOI18N
        gastoEurLabel.setName("gastoEurLabel"); // NOI18N

        gastoCombusField.setText(resourceMap.getString("gastoCombusField.text")); // NOI18N
        gastoCombusField.setName("gastoCombusField"); // NOI18N
        gastoCombusField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gastoCombusFieldFocusLost(evt);
            }
        });

        idConductorLabel.setText(resourceMap.getString("idConductorLabel.text")); // NOI18N
        idConductorLabel.setName("idConductorLabel"); // NOI18N

        jComboBoxConductor.setName("jComboBoxConductor"); // NOI18N
        jComboBoxConductor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxConductorItemStateChanged(evt);
            }
        });

        jButtonClose.setText(resourceMap.getString("jButtonClose.text")); // NOI18N
        jButtonClose.setName("jButtonClose"); // NOI18N
        jButtonClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCloseMouseClicked(evt);
            }
        });

        deleteButton.setText(resourceMap.getString("deleteButton.text")); // NOI18N
        deleteButton.setName("deleteButton"); // NOI18N
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });

        refreshButton.setText(resourceMap.getString("refreshButton.text")); // NOI18N
        refreshButton.setName("refreshButton"); // NOI18N
        refreshButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshButtonMouseClicked(evt);
            }
        });

        saveButton.setText(resourceMap.getString("saveButton.text")); // NOI18N
        saveButton.setEnabled(false);
        saveButton.setName("saveButton"); // NOI18N
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });

        jCalendarFecha.setName("jCalendarFecha"); // NOI18N
        jCalendarFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCalendarFechaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(horaSaidaLabel)
                                    .addComponent(horaChegadaLabel)
                                    .addComponent(gastosReparaLabel)
                                    .addComponent(combustibleLitrosLabel)
                                    .addComponent(gastoEurLabel)
                                    .addComponent(idConductorLabel)
                                    .addComponent(MatriculaLabel)
                                    .addComponent(kmSaidaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(kmChegadaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(dataLabel)
                                .addGap(106, 106, 106)))
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(gastoCombusField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(combustibleLitrosField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(gastosReparaField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(horaChegadaField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(horaSaidaField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jCalendarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(kmChegadaField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(kmSaidaField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jButtonClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addGap(93, 93, 93)
                        .addComponent(refreshButton)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton)
                        .addContainerGap())))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(dataLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jCalendarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MatriculaLabel)
                            .addComponent(jComboBoxMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kmSaidaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kmSaidaLabel))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kmChegadaLabel)
                    .addComponent(kmChegadaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(horaSaidaLabel)
                    .addComponent(horaSaidaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(horaChegadaLabel)
                    .addComponent(horaChegadaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gastosReparaLabel)
                    .addComponent(gastosReparaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combustibleLitrosLabel)
                    .addComponent(combustibleLitrosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gastoEurLabel)
                    .addComponent(gastoCombusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idConductorLabel)
                    .addComponent(jComboBoxConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(jButtonClose)
                    .addComponent(refreshButton)
                    .addComponent(saveButton))
                .addGap(20, 20, 20))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(engadirlinhainforme.EngadirLinhaInformeApp.class).getContext().getActionMap(EngadirLinhaInformeView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 690, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void kmSaidaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kmSaidaFieldFocusLost

        this.vb_kmSaidaField = true;
        this.updateBoolAndComproValues();
}//GEN-LAST:event_kmSaidaFieldFocusLost

    private void kmChegadaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kmChegadaFieldFocusLost

        this.vb_kmChegadaField = true;
        this.updateBoolAndComproValues();
}//GEN-LAST:event_kmChegadaFieldFocusLost

    private void horaSaidaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_horaSaidaFieldFocusLost

        this.vb_horaSaidaField = true;
        this.updateBoolAndComproValues();
}//GEN-LAST:event_horaSaidaFieldFocusLost

    private void horaChegadaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_horaChegadaFieldFocusLost

        this.vb_horaChegadaField = true;
        this.updateBoolAndComproValues();
}//GEN-LAST:event_horaChegadaFieldFocusLost

    private void gastosReparaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gastosReparaFieldFocusLost

        this.vb_gastosReparaField = true;
        this.updateBoolAndComproValues();
}//GEN-LAST:event_gastosReparaFieldFocusLost

    private void combustibleLitrosFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combustibleLitrosFieldFocusLost

        this.vb_combustibleLitrosField = true;
        this.updateBoolAndComproValues();
}//GEN-LAST:event_combustibleLitrosFieldFocusLost

    private void gastoCombusFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gastoCombusFieldFocusLost

        this.vb_gastoCombusField = true;
        this.updateBoolAndComproValues();
}//GEN-LAST:event_gastoCombusFieldFocusLost

    private void jButtonCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCloseMouseClicked
        mysql_i.pechaConexion();// TODO add your handling code here:
        System.exit(0);
}//GEN-LAST:event_jButtonCloseMouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        this.resetForm();// TODO add your handling code here:
        this.updateBoolAndComproValues();
}//GEN-LAST:event_deleteButtonMouseClicked

    private void refreshButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshButtonMouseClicked
        this.readDBAndReloadCombos();
        this.updateBoolAndComproValues();
}//GEN-LAST:event_refreshButtonMouseClicked

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
        Boolean success;

        mysql_i.set_jid_matricula(
                    this.jComboBoxMatricula.getSelectedItem().toString()
               );
        mysql_i.set_jconductor(
                    this.jComboBoxConductor.getSelectedItem().toString()
                );
        mysql_i.set_aux_jgasto_eur(
                    this.gastoCombusField.getText()
                );
        mysql_i.set_aux_jkm_saida(
                    this.kmSaidaField.getText()
                );
        mysql_i.set_aux_jkm_chegada(
                    this.kmChegadaField.getText()
                );
        mysql_i.set_aux_jcombustible_litros(
                    this.combustibleLitrosField.getText()
                );

        mysql_i.set_aux_jfdata(
                    this.fdata_bd
                );
        mysql_i.set_aux_jhora_saida(
                    this.horaSaidaField.getText()
                );
        mysql_i.set_aux_jhora_chegada(
                    this.horaSaidaField.getText()
                );
        mysql_i.set_aux_jgastos_repara(
                    this.gastosReparaField.getText()
                );

        this.updateBoolAndComproValues();
        success = this.execSQLTransaction();
        this.renovaForm(success);
        this.updateBoolAndComproValues();
}//GEN-LAST:event_saveButtonMouseClicked

    private void jCalendarFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCalendarFechaMouseClicked
        this.updateBoolAndComproValues();
    }//GEN-LAST:event_jCalendarFechaMouseClicked

    private void jComboBoxConductorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxConductorItemStateChanged
        this.updateBoolAndComproValues();
    }//GEN-LAST:event_jComboBoxConductorItemStateChanged

    private void jComboBoxMatriculaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxMatriculaItemStateChanged
        this.updateBoolAndComproValues();
    }//GEN-LAST:event_jComboBoxMatriculaItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MatriculaLabel;
    private javax.swing.JTextField combustibleLitrosField;
    private javax.swing.JLabel combustibleLitrosLabel;
    private javax.swing.JLabel dataLabel;
    private javax.swing.JLabel debugField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField gastoCombusField;
    private javax.swing.JLabel gastoEurLabel;
    private javax.swing.JTextField gastosReparaField;
    private javax.swing.JLabel gastosReparaLabel;
    private javax.swing.JTextField horaChegadaField;
    private javax.swing.JLabel horaChegadaLabel;
    private javax.swing.JTextField horaSaidaField;
    private javax.swing.JLabel horaSaidaLabel;
    private javax.swing.JLabel idConductorLabel;
    private javax.swing.JButton jButtonClose;
    private com.toedter.calendar.JCalendar jCalendarFecha;
    private javax.swing.JComboBox jComboBoxConductor;
    private javax.swing.JComboBox jComboBoxMatricula;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelComproConductor;
    private javax.swing.JLabel jLabelComproMatricula;
    private javax.swing.JLabel jLabelComproRestoDatos;
    private javax.swing.JLabel jLabelComprofData;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField kmChegadaField;
    private javax.swing.JLabel kmChegadaLabel;
    private javax.swing.JTextField kmSaidaField;
    private javax.swing.JLabel kmSaidaLabel;
    private javax.swing.JLabel labelComprCond;
    private javax.swing.JLabel labelComprfData;
    private javax.swing.JLabel labelComproKmsHoras;
    private javax.swing.JLabel labelComproMatr;
    private javax.swing.JLabel labelComproResto;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;

    private String databasename = "contrlvehicdb_2010";

    // VARIABLES ENGADIDAS POLO USUSARIO
    PruebaMySQL mysql_i = new PruebaMySQL(databasename) ;

    public void PruebaMySQL(String dbname){
        databasename = dbname;
    }

    // Variables bandeira (usadas para habilitar o botón gardar)
    Boolean vb_combustibleLitrosField = false;
    Boolean vb_gastoCombusField = false;
    Boolean vb_gastosReparaField = false;
    Boolean vb_horaChegadaField = false;
    Boolean vb_horaSaidaField = false;
    Boolean vb_kmChegadaField = false;
    Boolean vb_kmSaidaField = false;

    int anho,
        mes,
        dia;
    private String fdata_bd;
    //int hora = Integer.parseInt(Combo_Hrs1.getSelectedItem().toString());
    //private ResultSet tuplas;

    private void updateBoolAndComproValues() throws NullPointerException{
        Boolean err = false;
        try{
            this.anho = jCalendarFecha.getCalendar().get(
                        java.util.Calendar.YEAR
                    );
            this.mes  = jCalendarFecha.getCalendar().get(
                        java.util.Calendar.MONTH
                    )+1;
            this.dia = jCalendarFecha.getCalendar().get(
                        java.util.Calendar.DATE
                    );
            //int hora = Integer.parseInt(Combo_Hrs1.getSelectedItem().toString());
            if( mes > 9){
                this.fdata_bd = anho+"-"+ mes+"-"+dia;
            } else{
                this.fdata_bd = anho+"-0"+ mes+"-"+dia;
             }
            
        }
        catch(Exception e){
            debugField.setText(
                        "ERRO: valor erróneo de data"
                    );
        }
        

        try{
            labelComprCond.setText(
                    this.jComboBoxConductor.getSelectedItem().toString()
                    );
        } catch(Exception e){
            labelComprCond.setText("-");
        }
        try{
            labelComproMatr.setText(
                    this.jComboBoxMatricula.getSelectedItem().toString()
                    );
        } catch(Exception e){
            labelComproMatr.setText("-");
        }
        try{
            labelComprfData.setText(
                    this.fdata_bd
                    );
        } catch(Exception e){
            labelComprfData.setText("-");
        }
        try{
            labelComproResto.setText(
                    "Reparación: "
                        + this.gastosReparaField.getText()
                    + "€, Combustible: "
                        + this.combustibleLitrosField.getText()
                    + "l, Gasto combus: "
                        + this.gastoCombusField.getText()
                    + "€."
                    );
        } catch(Exception e){
            labelComproResto.setText("algún valor erróneo");
        }

                try{
            labelComproKmsHoras.setText(
                    "Km. Saída: "
                        + this.kmSaidaField.getText()
                    + ", Km. chegada: "
                        + this.kmChegadaField.getText()
                    + ", H. Saída: "
                        + this.horaSaidaField.getText()
                    + ", H. chegada: "
                        + this.horaChegadaField.getText()
                    );
        } catch(Exception e){
            labelComproResto.setText("algún valor erróneo");
        }
        this.habilitaGardar();

    } // updateBoolAndComproValues

    private void habilitaGardar(){
        Boolean areAllFilled;
        areAllFilled =  this.vb_combustibleLitrosField &
                        this.vb_gastoCombusField &
                        this.vb_gastosReparaField &
                        this.vb_horaChegadaField &
                        this.vb_horaSaidaField &
                        this.vb_kmChegadaField &
                        this.vb_kmSaidaField;
        if (areAllFilled == true ){
            this.saveButton.setEnabled(true);
        }
    }

    private void renovaForm(Boolean checkValue){

        if( checkValue == true ){
            this.resetForm();
            this.debugField.setText("Datos insertados.?? "
                    + "Proceda con un novo rexistro");
            this.debugField.setForeground(Color.green);

        }
        else{
            this.debugField.setText("Algún erro sucedeu. "
                    + "Datos NON insertados");
            this.debugField.setForeground(Color.red);
        }

    }
    private void resetForm(){
        this.vb_combustibleLitrosField = false;
        this.vb_gastoCombusField = false;
        this.vb_gastosReparaField = false;
        this.vb_horaChegadaField = false;
        this.vb_horaSaidaField = false;
        this.vb_kmChegadaField = false;
        this.vb_kmSaidaField = false;
        this.kmSaidaField.setText("");
        this.kmChegadaField.setText("");
        this.horaChegadaField.setText("");
        this.horaSaidaField.setText("");
        this.gastosReparaField.setText("0");
        this.combustibleLitrosField.setText("0");
        this.gastoCombusField.setText("0");

        this.debugField.setText("Formulario reseteado");
        this.debugField.setForeground(Color.blue);
        this.saveButton.setEnabled(false);
    }

    private void readDBAndReloadCombos(){

        {
            int i = 0;
            ResultSet rs = null;
            try{
                rs = mysql_i.getVehiculos();
                this.jComboBoxMatricula.removeAllItems();
                while( rs.next() ){
                    String cadea = rs.getString ("id_matricula");
                    try{
                        this.jComboBoxMatricula.insertItemAt(cadea,i);
                    }
                    catch( Exception e1 ){
                        this.debugField.setText(
                            "Problema ó procesar valores de matrículas: " + e1
                          );
                        this.debugField.setForeground(Color.red);
                    }
                    i++;

                }// while
            }  // try 1
            catch( Exception e2 ){
                JOptionPane.showMessageDialog(null,
                    "Problema ó solicitar datos de matrículas ó interface "
                    + "coa Base de Datos: "
                    + e2
                    );
                this.debugField.setForeground(Color.red);
            } // catch e2
            //mysql_i.pechaConexion();
        } // bloque vehículos
        {
            int i = 0;
            ResultSet rs = null;
            try{
                rs = mysql_i.getConductores();
                this.jComboBoxConductor.removeAllItems();
                while( rs.next() ){
                    String cadea = rs.getString ("id_conductor");
                    try{
                        this.jComboBoxConductor.insertItemAt(cadea,i);
                    }
                    catch( Exception e1 ){
                        this.debugField.setText(
                            "Problema ó procesar valores de conductores: "
                            + e1
                          );
                        this.debugField.setForeground(Color.red);
                    }
                    i++;

                }// while
            }  // try 1
            catch( Exception e2 ){
                JOptionPane.showMessageDialog(null,
                    "Problema ó solicitar datos de conductores ó interface "
                    + "coa Base de Datos: "
                    + e2
                    );
                this.debugField.setForeground(Color.red);
            } // catch e2
            //mysql_i.pechaConexion();

        } // bloque conductores

    } // readDBAndReloadCombos

    private Boolean execSQLTransaction(){
        Boolean success = true;

        try{
            mysql_i.insertaLinha();
        }
        catch( SQLException se ){
            success = false;
            this.debugField.setText(
                        "erro salvando datos na base de datos: " + se
                    );
            this.debugField.setForeground(Color.red);
        }

        if( success == true){
            this.debugField.setText("Gardado con éxito");
            this.debugField.setForeground(Color.green);
        }
        return success;
    } // execSQLTransaction
}
